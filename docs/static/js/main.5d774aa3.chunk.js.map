{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACI,sBAAMC,SAhBW,SAACC,GAGlBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SACG,uBACKO,KAAK,OACLC,MAAST,EACTU,SAxBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,aA8BhCZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCrCrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEqCC,UAAYH,GAFjD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECFwB,SAAEA,GAE1B,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACCH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAI3B,CAAEpB,IAEGqB,EDjB4BK,CAAc1B,GAAlCa,EAAf,EAAQN,KAAea,EAAvB,EAAuBA,QAEvB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIC,aEiBxBgB,EA9BM,WAEjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAMA,OAEI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MChBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5d774aa3.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        // Para prevenir el refresco por defecto del formulario\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            \r\n            setCategories( cats => [inputValue, ...cats ] );\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n           <input \r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange={ handleInputChange }\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async ( category) =>{\r\n\r\n    const url  = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI ( category )  }&limit=10&api_key=HBSexdtnLXk4AOWuMoCewieIKUtANe2R`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data : images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n            \r\n            <div className='card-grid'>\r\n                    {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key ={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                    }\r\n        </div>        \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category )=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    });\r\n            });\r\n\r\n    },[ category ]);\r\n\r\n    return state; // {data:[], loading:true}\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [ 'Arale',...categories ] );\r\n    // }\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category}\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}